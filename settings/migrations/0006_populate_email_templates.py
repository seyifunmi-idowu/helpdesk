# Generated by Django 4.2.5 on 2025-09-01 22:43

from django.db import migrations
import csv
import os

def populate_email_templates(apps, schema_editor):
    EmailTemplate = apps.get_model('settings', 'EmailTemplate')
    
    # Assuming uv_email_templates.csv is in the project root directory
    # For a more robust solution, consider placing this CSV within the settings app directory
    # and accessing it via os.path.join(os.path.dirname(__file__), 'data', 'uv_email_templates.csv')
    csv_file_path = os.path.join(os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir, os.pardir)), 'uv_email_templates.csv')

    with open(csv_file_path, 'r', encoding='utf-8') as file:
        reader = csv.DictReader(file)
        for row in reader:
            # Replace Symfony/Jinja-like placeholders with Django template syntax
            subject = row['subject'].replace('{%', '{{').replace('%}', '}}').replace('{{ ', '{{ ').replace(' }}', ' }}')
            body = row['message'].replace('{%', '{{').replace('%}', '}}').replace('{{ ', '{{ ').replace(' }}', ' }}')

            EmailTemplate.objects.create(
                id=row['id'],
                name=row['name'],
                subject=subject,
                body=body,
                is_active=bool(int(row['is_predefined'])), # Assuming is_predefined 1 means active
            )

def reverse_populate_email_templates(apps, schema_editor):
    EmailTemplate = apps.get_model('settings', 'EmailTemplate')
    EmailTemplate.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('settings', '0005_emailtemplate'),
    ]

    operations = [
        migrations.RunPython(populate_email_templates, reverse_code=reverse_populate_email_templates),
    ]
