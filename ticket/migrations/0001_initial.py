# Generated by Django 4.2.5 on 2025-08-27 14:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SavedReplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('templateId', models.IntegerField(blank=True, null=True)),
                ('isPredefind', models.BooleanField(blank=True, default=True, null=True)),
                ('messageInline', models.TextField(blank=True, null=True)),
                ('templateFor', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Saved Reply',
                'verbose_name_plural': 'Saved Replies',
                'db_table': 'uv_saved_replies',
            },
        ),
        migrations.CreateModel(
            name='SupportLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('colorCode', models.CharField(blank=True, max_length=191, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Support Label',
                'verbose_name_plural': 'Support Labels',
                'db_table': 'uv_support_label',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'uv_tag',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=191)),
                ('mailboxEmail', models.CharField(blank=True, max_length=191, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
                ('referenceIds', models.TextField(blank=True, null=True)),
                ('isNew', models.BooleanField(default=True)),
                ('isReplied', models.BooleanField(default=False)),
                ('isReplyEnabled', models.BooleanField(default=True)),
                ('isStarred', models.BooleanField(default=False)),
                ('isTrashed', models.BooleanField(default=False)),
                ('isAgentViewed', models.BooleanField(default=False)),
                ('isCustomerViewed', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('customerRepliedAt', models.DateTimeField(blank=True, null=True)),
                ('outlookConversationId', models.TextField(blank=True, null=True)),
                ('responseSlaLevel', models.IntegerField(blank=True, null=True)),
                ('resolveSlaLevel', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_as_agent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'db_table': 'uv_ticket',
            },
        ),
        migrations.CreateModel(
            name='TicketPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=191, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('colorCode', models.CharField(blank=True, max_length=191, null=True)),
            ],
            options={
                'verbose_name': 'Ticket Priority',
                'verbose_name_plural': 'Ticket Priorities',
                'db_table': 'uv_ticket_priority',
            },
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=191, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('colorCode', models.CharField(blank=True, max_length=191, null=True)),
                ('sortOrder', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Ticket Status',
                'verbose_name_plural': 'Ticket Statuses',
                'db_table': 'uv_ticket_status',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=191, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('isActive', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Ticket Type',
                'verbose_name_plural': 'Ticket Types',
                'db_table': 'uv_ticket_type',
            },
        ),
        migrations.CreateModel(
            name='TicketTagsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.tag')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket')),
            ],
            options={
                'db_table': 'uv_tickets_tags',
                'unique_together': {('ticket', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='TicketRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(default=0)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ticket.ticket')),
            ],
            options={
                'verbose_name': 'Ticket Rating',
                'verbose_name_plural': 'Ticket Ratings',
                'db_table': 'uv_ticket_rating',
            },
        ),
        migrations.CreateModel(
            name='TicketLabelsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.supportlabel')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket')),
            ],
            options={
                'db_table': 'uv_tickets_labels',
                'unique_together': {('ticket', 'label')},
            },
        ),
        migrations.CreateModel(
            name='TicketCollaboratorsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'uv_tickets_collaborators',
                'unique_together': {('ticket', 'user')},
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='collaborators',
            field=models.ManyToManyField(related_name='tickets_as_collaborator', through='ticket.TicketCollaboratorsThrough', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ticket',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_as_customer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ticket',
            name='priority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ticket.ticketpriority'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ticket.ticketstatus'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='supportGroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.supportgroup'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='supportLabels',
            field=models.ManyToManyField(related_name='tickets_with_label', through='ticket.TicketLabelsThrough', to='ticket.supportlabel'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='supportTags',
            field=models.ManyToManyField(related_name='tickets_with_tag', through='ticket.TicketTagsThrough', to='ticket.tag'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='supportTeam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.supportteam'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ticket.tickettype'),
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=191)),
                ('messageId', models.TextField(blank=True, null=True)),
                ('threadType', models.CharField(max_length=191)),
                ('createdBy', models.CharField(max_length=191)),
                ('cc', models.JSONField(blank=True, null=True)),
                ('bcc', models.JSONField(blank=True, null=True)),
                ('replyTo', models.JSONField(blank=True, null=True)),
                ('deliveryStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('isLocked', models.BooleanField(default=False)),
                ('isBookmarked', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('agentViewedAt', models.DateTimeField(blank=True, null=True)),
                ('customerViewedAt', models.DateTimeField(blank=True, null=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='ticket.ticket')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Thread',
                'verbose_name_plural': 'Threads',
                'db_table': 'uv_thread',
            },
        ),
        migrations.CreateModel(
            name='SavedRepliesTeamsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savedReply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.savedreplies')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.supportteam')),
            ],
            options={
                'db_table': 'uv_saved_replies_teams',
                'unique_together': {('savedReply', 'team')},
            },
        ),
        migrations.CreateModel(
            name='SavedRepliesGroupsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.supportgroup')),
                ('savedReply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.savedreplies')),
            ],
            options={
                'db_table': 'uv_saved_replies_groups',
                'unique_together': {('savedReply', 'group')},
            },
        ),
        migrations.AddField(
            model_name='savedreplies',
            name='groups',
            field=models.ManyToManyField(related_name='saved_replies_groups', through='ticket.SavedRepliesGroupsThrough', to='core.supportgroup'),
        ),
        migrations.AddField(
            model_name='savedreplies',
            name='teams',
            field=models.ManyToManyField(related_name='saved_replies_teams', through='ticket.SavedRepliesTeamsThrough', to='core.supportteam'),
        ),
        migrations.AddField(
            model_name='savedreplies',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('path', models.TextField(blank=True, null=True)),
                ('contentType', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('contentId', models.CharField(blank=True, max_length=255, null=True)),
                ('fileSystem', models.CharField(blank=True, max_length=255, null=True)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='ticket.thread')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'db_table': 'uv_ticket_attachments',
            },
        ),
        migrations.CreateModel(
            name='AgentActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agentName', models.CharField(blank=True, max_length=255, null=True)),
                ('customerName', models.CharField(blank=True, max_length=255, null=True)),
                ('threadType', models.CharField(blank=True, max_length=255, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket.ticket')),
            ],
            options={
                'verbose_name': 'Agent Activity',
                'verbose_name_plural': 'Agent Activities',
                'db_table': 'uv_agent_activity',
            },
        ),
    ]
